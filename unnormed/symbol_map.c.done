static const TSSymbol	ts_symbol_map[] = {};
void	init_symbol_map(TSSymbol v)
{
	v->arr[0] = 0;
	v->arr[sym_word] = sym_word;
	v->arr[anon_sym_for] = anon_sym_for;
	v->arr[anon_sym_select] = anon_sym_select;
	v->arr[anon_sym_in] = anon_sym_in;
	v->arr[anon_sym_LPAREN_LPAREN] = anon_sym_LPAREN_LPAREN;
	v->arr[anon_sym_RPAREN_RPAREN] = anon_sym_RPAREN_RPAREN;
	v->arr[anon_sym_SEMI] = anon_sym_SEMI;
	v->arr[anon_sym_COMMA] = anon_sym_COMMA;
	v->arr[anon_sym_EQ] = anon_sym_EQ;
	v->arr[anon_sym_PLUS_PLUS] = anon_sym_PLUS_PLUS;
	v->arr[anon_sym_DASH_DASH] = anon_sym_DASH_DASH;
	v->arr[anon_sym_PLUS_EQ] = anon_sym_PLUS_EQ;
	v->arr[anon_sym_DASH_EQ] = anon_sym_DASH_EQ;
	v->arr[anon_sym_STAR_EQ] = anon_sym_STAR_EQ;
	v->arr[anon_sym_SLASH_EQ] = anon_sym_SLASH_EQ;
	v->arr[anon_sym_PERCENT_EQ] = anon_sym_PERCENT_EQ;
	v->arr[anon_sym_STAR_STAR_EQ] = anon_sym_STAR_STAR_EQ;
	v->arr[anon_sym_LT_LT_EQ] = anon_sym_LT_LT_EQ;
	v->arr[anon_sym_GT_GT_EQ] = anon_sym_GT_GT_EQ;
	v->arr[anon_sym_AMP_EQ] = anon_sym_AMP_EQ;
	v->arr[anon_sym_CARET_EQ] = anon_sym_CARET_EQ;
	v->arr[anon_sym_PIPE_EQ] = anon_sym_PIPE_EQ;
	v->arr[anon_sym_PIPE_PIPE] = anon_sym_PIPE_PIPE;
	v->arr[anon_sym_DASHo] = anon_sym_DASHo;
	v->arr[anon_sym_AMP_AMP] = anon_sym_AMP_AMP;
	v->arr[anon_sym_DASHa] = anon_sym_DASHa;
	v->arr[anon_sym_PIPE] = anon_sym_PIPE;
	v->arr[anon_sym_CARET] = anon_sym_CARET;
	v->arr[anon_sym_AMP] = anon_sym_AMP;
	v->arr[anon_sym_EQ_EQ] = anon_sym_EQ_EQ;
	v->arr[anon_sym_BANG_EQ] = anon_sym_BANG_EQ;
	v->arr[anon_sym_LT] = anon_sym_LT;
	v->arr[anon_sym_GT] = anon_sym_GT;
	v->arr[anon_sym_LT_EQ] = anon_sym_LT_EQ;
	v->arr[anon_sym_GT_EQ] = anon_sym_GT_EQ;
	v->arr[anon_sym_LT_LT] = anon_sym_LT_LT;
	v->arr[anon_sym_GT_GT] = anon_sym_GT_GT;
	v->arr[anon_sym_PLUS] = anon_sym_PLUS;
	v->arr[anon_sym_DASH] = anon_sym_DASH;
	v->arr[anon_sym_STAR] = anon_sym_STAR;
	v->arr[anon_sym_SLASH] = anon_sym_SLASH;
	v->arr[anon_sym_PERCENT] = anon_sym_PERCENT;
	v->arr[anon_sym_STAR_STAR] = anon_sym_STAR_STAR;
	v->arr[anon_sym_LPAREN] = anon_sym_LPAREN;
	v->arr[anon_sym_RPAREN] = anon_sym_RPAREN;
	v->arr[aux_sym__c_word_token1] = sym_word;
	v->arr[anon_sym_while] = anon_sym_while;
	v->arr[anon_sym_until] = anon_sym_until;
	v->arr[anon_sym_do] = anon_sym_do;
	v->arr[anon_sym_done] = anon_sym_done;
	v->arr[anon_sym_if] = anon_sym_if;
	v->arr[anon_sym_then] = anon_sym_then;
	v->arr[anon_sym_fi] = anon_sym_fi;
	v->arr[anon_sym_elif] = anon_sym_elif;
	v->arr[anon_sym_else] = anon_sym_else;
	v->arr[anon_sym_case] = anon_sym_case;
	v->arr[anon_sym_esac] = anon_sym_esac;
	v->arr[anon_sym_SEMI_SEMI] = anon_sym_SEMI_SEMI;
	v->arr[anon_sym_SEMI_AMP] = anon_sym_SEMI_AMP;
	v->arr[anon_sym_SEMI_SEMI_AMP] = anon_sym_SEMI_SEMI_AMP;
	v->arr[anon_sym_function] = anon_sym_function;
	v->arr[anon_sym_LBRACE] = anon_sym_LBRACE;
	v->arr[anon_sym_RBRACE] = anon_sym_RBRACE;
	v->arr[anon_sym_PIPE_AMP] = anon_sym_PIPE_AMP;
	v->arr[anon_sym_BANG] = anon_sym_BANG;
	v->arr[anon_sym_LBRACK] = anon_sym_LBRACK;
	v->arr[anon_sym_RBRACK] = anon_sym_RBRACK;
	v->arr[anon_sym_LBRACK_LBRACK] = anon_sym_LBRACK_LBRACK;
	v->arr[anon_sym_RBRACK_RBRACK] = anon_sym_RBRACK_RBRACK;
	v->arr[anon_sym_declare] = anon_sym_declare;
	v->arr[anon_sym_typeset] = anon_sym_typeset;
	v->arr[anon_sym_export] = anon_sym_export;
	v->arr[anon_sym_readonly] = anon_sym_readonly;
	v->arr[anon_sym_local] = anon_sym_local;
	v->arr[anon_sym_unset] = anon_sym_unset;
	v->arr[anon_sym_unsetenv] = anon_sym_unsetenv;
	v->arr[anon_sym_EQ_TILDE] = anon_sym_EQ_TILDE;
	v->arr[anon_sym_AMP_GT] = anon_sym_AMP_GT;
	v->arr[anon_sym_AMP_GT_GT] = anon_sym_AMP_GT_GT;
	v->arr[anon_sym_LT_AMP] = anon_sym_LT_AMP;
	v->arr[anon_sym_GT_AMP] = anon_sym_GT_AMP;
	v->arr[anon_sym_GT_PIPE] = anon_sym_GT_PIPE;
	v->arr[anon_sym_LT_AMP_DASH] = anon_sym_LT_AMP_DASH;
	v->arr[anon_sym_GT_AMP_DASH] = anon_sym_GT_AMP_DASH;
	v->arr[anon_sym_LT_LT_DASH] = anon_sym_LT_LT_DASH;
	v->arr[aux_sym_heredoc_redirect_token1] = aux_sym_heredoc_redirect_token1;
	v->arr[anon_sym_LT_LT_LT] = anon_sym_LT_LT_LT;
	v->arr[anon_sym_QMARK] = anon_sym_QMARK;
	v->arr[anon_sym_COLON] = anon_sym_COLON;
	v->arr[anon_sym_PLUS_PLUS2] = anon_sym_PLUS_PLUS;
	v->arr[anon_sym_DASH_DASH2] = anon_sym_DASH_DASH;
	v->arr[anon_sym_DASH2] = anon_sym_DASH;
	v->arr[anon_sym_PLUS2] = anon_sym_PLUS;
	v->arr[anon_sym_TILDE] = anon_sym_TILDE;
	v->arr[anon_sym_DOLLAR_LPAREN_LPAREN] = anon_sym_DOLLAR_LPAREN_LPAREN;
	v->arr[anon_sym_DOLLAR_LBRACK] = anon_sym_DOLLAR_LBRACK;
	v->arr[aux_sym_brace_expression_token1] = sym_number;
	v->arr[anon_sym_DOT_DOT] = anon_sym_DOT_DOT;
	v->arr[anon_sym_RBRACE2] = anon_sym_RBRACE;
	v->arr[aux_sym_concatenation_token1] = aux_sym_concatenation_token1;
	v->arr[anon_sym_DOLLAR] = anon_sym_DOLLAR;
	v->arr[sym__special_character] = sym__special_character;
	v->arr[anon_sym_DQUOTE] = anon_sym_DQUOTE;
	v->arr[sym_string_content] = sym_string_content;
	v->arr[sym_raw_string] = sym_raw_string;
	v->arr[sym_ansi_c_string] = sym_ansi_c_string;
	v->arr[aux_sym_number_token1] = aux_sym_number_token1;
	v->arr[aux_sym_number_token2] = aux_sym_number_token2;
	v->arr[anon_sym_POUND] = anon_sym_POUND;
	v->arr[anon_sym_DOLLAR_LBRACE] = anon_sym_DOLLAR_LBRACE;
	v->arr[anon_sym_RBRACE3] = anon_sym_RBRACE;
	v->arr[anon_sym_BANG2] = anon_sym_BANG;
	v->arr[anon_sym_AT] = anon_sym_AT;
	v->arr[anon_sym_STAR2] = anon_sym_STAR;
	v->arr[anon_sym_POUND2] = anon_sym_POUND;
	v->arr[anon_sym_EQ2] = anon_sym_EQ;
	v->arr[anon_sym_COLON_EQ] = anon_sym_COLON_EQ;
	v->arr[anon_sym_DASH3] = anon_sym_DASH;
	v->arr[anon_sym_COLON_DASH] = anon_sym_COLON_DASH;
	v->arr[anon_sym_PLUS3] = anon_sym_PLUS;
	v->arr[anon_sym_COLON_PLUS] = anon_sym_COLON_PLUS;
	v->arr[anon_sym_QMARK2] = anon_sym_QMARK;
	v->arr[anon_sym_COLON_QMARK] = anon_sym_COLON_QMARK;
	v->arr[anon_sym_PERCENT_PERCENT] = anon_sym_PERCENT_PERCENT;
	v->arr[aux_sym__expansion_regex_token1] = sym_regex;
	v->arr[anon_sym_SLASH_SLASH] = anon_sym_SLASH_SLASH;
	v->arr[anon_sym_SLASH_POUND] = anon_sym_SLASH_POUND;
	v->arr[anon_sym_SLASH_PERCENT] = anon_sym_SLASH_PERCENT;
	v->arr[anon_sym_COMMA_COMMA] = anon_sym_COMMA_COMMA;
	v->arr[anon_sym_CARET_CARET] = anon_sym_CARET_CARET;
	v->arr[anon_sym_U] = anon_sym_U;
	v->arr[anon_sym_u] = anon_sym_u;
	v->arr[anon_sym_L] = anon_sym_L;
	v->arr[anon_sym_Q] = anon_sym_Q;
	v->arr[anon_sym_E] = anon_sym_E;
	v->arr[anon_sym_P] = anon_sym_P;
	v->arr[anon_sym_A] = anon_sym_A;
	v->arr[anon_sym_K] = anon_sym_K;
	v->arr[anon_sym_a] = anon_sym_a;
	v->arr[anon_sym_k] = anon_sym_k;
	v->arr[anon_sym_DOLLAR_LPAREN] = anon_sym_DOLLAR_LPAREN;
	v->arr[anon_sym_BQUOTE] = anon_sym_BQUOTE;
	v->arr[anon_sym_DOLLAR_BQUOTE] = anon_sym_DOLLAR_BQUOTE;
	v->arr[anon_sym_LT_LPAREN] = anon_sym_LT_LPAREN;
	v->arr[anon_sym_GT_LPAREN] = anon_sym_GT_LPAREN;
	v->arr[sym_comment] = sym_comment;
	v->arr[sym__comment_word] = sym_word;
	v->arr[aux_sym__simple_variable_name_token1] = sym_variable_name;
	v->arr[aux_sym__multiline_variable_name_token1] = sym_variable_name;
	v->arr[anon_sym_AT2] = anon_sym_AT2;
	v->arr[anon_sym_0] = anon_sym_AT2;
	v->arr[anon_sym__] = anon_sym_AT2;
	v->arr[sym_heredoc_start] = sym_heredoc_start;
	v->arr[sym_simple_heredoc_body] = sym_heredoc_body;
	v->arr[sym__heredoc_body_beginning] = sym__heredoc_body_beginning;
	v->arr[sym_heredoc_content] = sym_heredoc_content;
	v->arr[sym_heredoc_end] = sym_heredoc_end;
	v->arr[sym_file_descriptor] = sym_file_descriptor;
	v->arr[sym__empty_value] = sym__empty_value;
	v->arr[sym__concat] = sym__concat;
	v->arr[sym_variable_name] = sym_variable_name;
	v->arr[sym_test_operator] = sym_test_operator;
	v->arr[sym_regex] = sym_regex;
	v->arr[sym__regex_no_slash] = sym_regex;
	v->arr[sym__regex_no_space] = sym_regex;
	v->arr[sym__expansion_word] = sym_word;
	v->arr[sym_extglob_pattern] = sym_extglob_pattern;
	v->arr[sym__bare_dollar] = anon_sym_DOLLAR;
	v->arr[sym__brace_start] = anon_sym_LBRACE;
	v->arr[sym__immediate_double_hash] = sym__immediate_double_hash;
	v->arr[sym__external_expansion_sym_hash] = anon_sym_POUND;
	v->arr[sym__external_expansion_sym_bang] = anon_sym_BANG;
	v->arr[sym__external_expansion_sym_equal] = anon_sym_EQ;
	v->arr[sym___error_recovery] = sym___error_recovery;
	v->arr[sym_program] = sym_program;
	v->arr[sym__statements] = sym__statements;
	v->arr[aux_sym__terminated_statement] = aux_sym__terminated_statement;
	v->arr[sym__statement_not_pipeline] = sym__statement_not_pipeline;
	v->arr[sym_redirected_statement] = sym_redirected_statement;
	v->arr[sym_for_statement] = sym_for_statement;
	v->arr[sym_c_style_for_statement] = sym_c_style_for_statement;
	v->arr[sym__for_body] = sym__for_body;
	v->arr[sym__c_expression] = sym__c_expression;
	v->arr[sym__c_expression_not_assignment] = sym__c_expression_not_assignment;
	v->arr[sym__c_variable_assignment] = sym_variable_assignment;
	v->arr[sym__c_unary_expression] = sym_unary_expression;
	v->arr[sym__c_binary_expression] = sym_binary_expression;
	v->arr[sym__c_postfix_expression] = sym_postfix_expression;
	v->arr[sym__c_parenthesized_expression] = sym_parenthesized_expression;
	v->arr[sym_while_statement] = sym_while_statement;
	v->arr[sym_do_group] = sym_do_group;
	v->arr[sym_if_statement] = sym_if_statement;
	v->arr[sym_elif_clause] = sym_elif_clause;
	v->arr[sym_else_clause] = sym_else_clause;
	v->arr[sym_case_statement] = sym_case_statement;
	v->arr[sym_case_item] = sym_case_item;
	v->arr[sym_last_case_item] = sym_case_item;
	v->arr[sym_function_definition] = sym_function_definition;
	v->arr[sym_compound_statement] = sym_compound_statement;
	v->arr[sym_subshell] = sym_subshell;
	v->arr[sym_pipeline] = sym_pipeline;
	v->arr[sym_list] = sym_list;
	v->arr[sym_negated_command] = sym_negated_command;
	v->arr[sym_test_command] = sym_test_command;
	v->arr[sym__test_command_binary_expression] = sym_binary_expression;
	v->arr[sym_declaration_command] = sym_declaration_command;
	v->arr[sym_unset_command] = sym_unset_command;
	v->arr[sym_command] = sym_command;
	v->arr[sym_command_name] = sym_command_name;
	v->arr[sym_variable_assignment] = sym_variable_assignment;
	v->arr[sym_variable_assignments] = sym_variable_assignments;
	v->arr[sym_subscript] = sym_subscript;
	v->arr[sym_file_redirect] = sym_file_redirect;
	v->arr[sym_heredoc_redirect] = sym_heredoc_redirect;
	v->arr[sym__heredoc_pipeline] = sym_pipeline;
	v->arr[sym__heredoc_expression] = sym__heredoc_expression;
	v->arr[aux_sym__heredoc_command] = aux_sym__heredoc_command;
	v->arr[sym__heredoc_body] = sym__heredoc_body;
	v->arr[sym_heredoc_body] = sym_heredoc_body;
	v->arr[sym__simple_heredoc_body] = sym__simple_heredoc_body;
	v->arr[sym_herestring_redirect] = sym_herestring_redirect;
	v->arr[sym__expression] = sym__expression;
	v->arr[sym_binary_expression] = sym_binary_expression;
	v->arr[sym_ternary_expression] = sym_ternary_expression;
	v->arr[sym_unary_expression] = sym_unary_expression;
	v->arr[sym_postfix_expression] = sym_postfix_expression;
	v->arr[sym_parenthesized_expression] = sym_parenthesized_expression;
	v->arr[sym_arithmetic_expansion] = sym_arithmetic_expansion;
	v->arr[sym_brace_expression] = sym_brace_expression;
	v->arr[sym__arithmetic_expression] = sym__arithmetic_expression;
	v->arr[sym__arithmetic_literal] = sym__arithmetic_literal;
	v->arr[sym__arithmetic_binary_expression] = sym_binary_expression;
	v->arr[sym__arithmetic_ternary_expression] = sym_ternary_expression;
	v->arr[sym__arithmetic_unary_expression] = sym_unary_expression;
	v->arr[sym__arithmetic_postfix_expression] = sym_postfix_expression;
	v->arr[sym__arithmetic_parenthesized_expression] = sym_parenthesized_expression;
	v->arr[sym_concatenation] = sym_concatenation;
	v->arr[sym_string] = sym_string;
	v->arr[sym_translated_string] = sym_translated_string;
	v->arr[sym_array] = sym_array;
	v->arr[sym_number] = sym_number;
	v->arr[sym_simple_expansion] = sym_simple_expansion;
	v->arr[sym_expansion] = sym_expansion;
	v->arr[sym__expansion_body] = sym__expansion_body;
	v->arr[sym__expansion_expression] = sym__expansion_expression;
	v->arr[sym__expansion_regex] = sym__expansion_regex;
	v->arr[sym__expansion_regex_replacement] = sym__expansion_regex_replacement;
	v->arr[sym__expansion_regex_removal] = sym__expansion_regex_removal;
	v->arr[sym__expansion_max_length] = sym__expansion_max_length;
	v->arr[sym__expansion_max_length_expression] = sym__expansion_max_length_expression;
	v->arr[sym__expansion_max_length_binary_expression] = sym_binary_expression;
	v->arr[sym__expansion_operator] = sym__expansion_operator;
	v->arr[sym__concatenation_in_expansion] = sym_concatenation;
	v->arr[sym_command_substitution] = sym_command_substitution;
	v->arr[sym_process_substitution] = sym_process_substitution;
	v->arr[sym__extglob_blob] = sym__extglob_blob;
	v->arr[sym__c_terminator] = sym__c_terminator;
	v->arr[aux_sym__statements_repeat1] = aux_sym__statements_repeat1;
	v->arr[aux_sym_redirected_statement_repeat1] = aux_sym_redirected_statement_repeat1;
	v->arr[aux_sym_redirected_statement_repeat2] = aux_sym_redirected_statement_repeat2;
	v->arr[aux_sym_for_statement_repeat1] = aux_sym_for_statement_repeat1;
	v->arr[aux_sym__for_body_repeat1] = aux_sym__for_body_repeat1;
	v->arr[aux_sym_if_statement_repeat1] = aux_sym_if_statement_repeat1;
	v->arr[aux_sym_case_statement_repeat1] = aux_sym_case_statement_repeat1;
	v->arr[aux_sym_case_item_repeat1] = aux_sym_case_item_repeat1;
	v->arr[aux_sym_pipeline_repeat1] = aux_sym_pipeline_repeat1;
	v->arr[aux_sym_declaration_command_repeat1] = aux_sym_declaration_command_repeat1;
	v->arr[aux_sym_unset_command_repeat1] = aux_sym_unset_command_repeat1;
	v->arr[aux_sym_command_repeat1] = aux_sym_command_repeat1;
	v->arr[aux_sym_command_repeat2] = aux_sym_command_repeat2;
	v->arr[aux_sym_variable_assignments_repeat1] = aux_sym_variable_assignments_repeat1;
	v->arr[aux_sym_heredoc_body_repeat1] = aux_sym_heredoc_body_repeat1;
	v->arr[aux_sym__literal_repeat1] = aux_sym__literal_repeat1;
	v->arr[aux_sym_arithmetic_expansion_repeat1] = aux_sym_arithmetic_expansion_repeat1;
	v->arr[aux_sym_concatenation_repeat1] = aux_sym_concatenation_repeat1;
	v->arr[aux_sym_string_repeat1] = aux_sym_string_repeat1;
	v->arr[aux_sym__expansion_body_repeat1] = aux_sym__expansion_body_repeat1;
	v->arr[aux_sym__expansion_regex_repeat1] = aux_sym__expansion_regex_repeat1;
	v->arr[aux_sym__concatenation_in_expansion_repeat1] = aux_sym__concatenation_in_expansion_repeat1;
}